"use strict";(self.webpackChunkdocusaurus_docs=self.webpackChunkdocusaurus_docs||[]).push([[9261],{3905:(e,n,o)=>{o.d(n,{Zo:()=>c,kt:()=>v});var t=o(67294);function r(e,n,o){return n in e?Object.defineProperty(e,n,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[n]=o,e}function i(e,n){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),o.push.apply(o,t)}return o}function s(e){for(var n=1;n<arguments.length;n++){var o=null!=arguments[n]?arguments[n]:{};n%2?i(Object(o),!0).forEach((function(n){r(e,n,o[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):i(Object(o)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(o,n))}))}return e}function a(e,n){if(null==e)return{};var o,t,r=function(e,n){if(null==e)return{};var o,t,r={},i=Object.keys(e);for(t=0;t<i.length;t++)o=i[t],n.indexOf(o)>=0||(r[o]=e[o]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)o=i[t],n.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var l=t.createContext({}),d=function(e){var n=t.useContext(l),o=n;return e&&(o="function"==typeof e?e(n):s(s({},n),e)),o},c=function(e){var n=d(e.components);return t.createElement(l.Provider,{value:n},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var o=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),u=d(o),m=r,v=u["".concat(l,".").concat(m)]||u[m]||p[m]||i;return o?t.createElement(v,s(s({ref:n},c),{},{components:o})):t.createElement(v,s({ref:n},c))}));function v(e,n){var o=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=o.length,s=new Array(i);s[0]=m;var a={};for(var l in n)hasOwnProperty.call(n,l)&&(a[l]=n[l]);a.originalType=e,a[u]="string"==typeof e?e:r,s[1]=a;for(var d=2;d<i;d++)s[d]=o[d];return t.createElement.apply(null,s)}return t.createElement.apply(null,o)}m.displayName="MDXCreateElement"},65765:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>i,metadata:()=>a,toc:()=>d});var t=o(87462),r=(o(67294),o(3905));const i={slug:"/migration/versioned-sites"},s="Versioned \u7f51\u7ad9",a={unversionedId:"migration/migration-versioned-sites",id:"migration/migration-versioned-sites",title:"Versioned \u7f51\u7ad9",description:"Read up https://docusaurus.io/blog/2018/09/11/Towards-Docusaurus-2#versioning first for problems in v1's approach.",source:"@site/docs/migration/migration-versioned-sites.mdx",sourceDirName:"migration",slug:"/migration/versioned-sites",permalink:"/docs/migration/versioned-sites",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/migration/migration-versioned-sites.mdx",tags:[],version:"current",frontMatter:{slug:"/migration/versioned-sites"},sidebar:"docs",previous:{title:"\u624b\u52a8\u8fc1\u79fb",permalink:"/docs/migration/manual"},next:{title:"\u7ffb\u8bd1\u7f51\u7ad9",permalink:"/docs/migration/translated-sites"}},l={},d=[{value:"Migrate your <code>versioned_docs</code> front matter",id:"migrate-your-versioned_docs-front-matter",level:2},{value:"Migrate your <code>versioned_sidebars</code>",id:"migrate-your-versioned_sidebars",level:2},{value:"Populate your <code>versioned_sidebars</code> and <code>versioned_docs</code>",id:"populate-your-versioned_sidebars-and-versioned_docs",level:2},{value:"Convert style attributes to style objects in MDX",id:"convert-style-attributes-to-style-objects-in-mdx",level:2}],c={toc:d},u="wrapper";function p(e){let{components:n,...o}=e;return(0,r.kt)(u,(0,t.Z)({},c,o,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"versioned-\u7f51\u7ad9"},"Versioned \u7f51\u7ad9"),(0,r.kt)("p",null,"Read up ",(0,r.kt)("a",{parentName:"p",href:"https://docusaurus.io/blog/2018/09/11/Towards-Docusaurus-2#versioning"},"https://docusaurus.io/blog/2018/09/11/Towards-Docusaurus-2#versioning")," first for problems in v1's approach."),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"The versioned docs should normally be migrated correctly by the ",(0,r.kt)("a",{parentName:"p",href:"/docs/migration/automated"},"migration CLI"))),(0,r.kt)("h2",{id:"migrate-your-versioned_docs-front-matter"},"Migrate your ",(0,r.kt)("inlineCode",{parentName:"h2"},"versioned_docs")," front matter"),(0,r.kt)("p",null,"Unlike v1, The Markdown header for each versioned doc is no longer altered by using ",(0,r.kt)("inlineCode",{parentName:"p"},"version-${version}-${original_id}")," as the value for the actual ID field. See scenario below for better explanation."),(0,r.kt)("p",null,"For example, if you have a ",(0,r.kt)("inlineCode",{parentName:"p"},"docs/hello.md"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-md"},"---\nid: hello\ntitle: Hello, World !\n---\n\nHi, Endilie here :)\n")),(0,r.kt)("p",null,"When you cut a new version 1.0.0, in Docusaurus v1, ",(0,r.kt)("inlineCode",{parentName:"p"},"website/versioned_docs/version-1.0.0/hello.md")," looks like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-md"},"---\nid: version-1.0.0-hello\ntitle: Hello, World !\noriginal_id: hello\n---\n\nHi, Endilie here :)\n")),(0,r.kt)("p",null,"In comparison, Docusaurus 2 ",(0,r.kt)("inlineCode",{parentName:"p"},"website/versioned_docs/version-1.0.0/hello.md")," looks like this (exactly same as original)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-md"},"---\nid: hello\ntitle: Hello, World !\n---\n\nHi, Endilie here :)\n")),(0,r.kt)("p",null,"Since we're going for snapshot and allow people to move (and edit) docs easily inside version. The ",(0,r.kt)("inlineCode",{parentName:"p"},"id")," front matter is no longer altered and will remain the same. Internally, it is set as ",(0,r.kt)("inlineCode",{parentName:"p"},"version-${version}/${id}"),"."),(0,r.kt)("p",null,"Essentially, here are the necessary changes in each versioned_docs file:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-diff",metastring:"{2-3,5}","{2-3,5}":!0},"---\n- id: version-1.0.0-hello\n+ id: hello\ntitle: Hello, World !\n- original_id: hello\n---\nHi, Endilie here :)\n")),(0,r.kt)("h2",{id:"migrate-your-versioned_sidebars"},"Migrate your ",(0,r.kt)("inlineCode",{parentName:"h2"},"versioned_sidebars")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Refer to ",(0,r.kt)("inlineCode",{parentName:"li"},"versioned_docs")," ID as ",(0,r.kt)("inlineCode",{parentName:"li"},"version-${version}/${id}")," (v2) instead of ",(0,r.kt)("inlineCode",{parentName:"li"},"version-${version}-${original_id}")," (v1).")),(0,r.kt)("p",null,"Because in v1 there is a good chance someone created a new file with front matter ID ",(0,r.kt)("inlineCode",{parentName:"p"},'"version-${version}-${id}"')," that can conflict with ",(0,r.kt)("inlineCode",{parentName:"p"},"versioned_docs")," ID."),(0,r.kt)("p",null,"For example, Docusaurus 1 can't differentiate ",(0,r.kt)("inlineCode",{parentName:"p"},"docs/xxx.md")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-md"},"---\nid: version-1.0.0-hello\n---\n\nAnother content\n")),(0,r.kt)("p",null,"vs ",(0,r.kt)("inlineCode",{parentName:"p"},"website/versioned_docs/version-1.0.0/hello.md")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-md"},"---\nid: version-1.0.0-hello\ntitle: Hello, World !\noriginal_id: hello\n---\n\nHi, Endilie here :)\n")),(0,r.kt)("p",null,"Since we don't allow ",(0,r.kt)("inlineCode",{parentName:"p"},"/")," in v1 & v2 for front matter, conflicts are less likely to occur."),(0,r.kt)("p",null,"So v1 users need to migrate their versioned_sidebars file"),(0,r.kt)("p",null,"Example ",(0,r.kt)("inlineCode",{parentName:"p"},"versioned_sidebars/version-1.0.0-sidebars.json"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-diff",metastring:'{2-3,5-6,9-10}  title="versioned_sidebars/version-1.0.0-sidebars.json"',"{2-3,5-6,9-10}":!0,"":!0,title:'"versioned_sidebars/version-1.0.0-sidebars.json"'},'{\n+ "version-1.0.0/docs": {\n- "version-1.0.0-docs": {\n    "Test": [\n+    "version-1.0.0/foo/bar",\n-    "version-1.0.0-foo/bar",\n    ],\n    "Guides": [\n+    "version-1.0.0/hello",\n-    "version-1.0.0-hello"\n    ]\n  }\n}\n')),(0,r.kt)("h2",{id:"populate-your-versioned_sidebars-and-versioned_docs"},"Populate your ",(0,r.kt)("inlineCode",{parentName:"h2"},"versioned_sidebars")," and ",(0,r.kt)("inlineCode",{parentName:"h2"},"versioned_docs")),(0,r.kt)("p",null,"In v2, we use snapshot approach for documentation versioning. ",(0,r.kt)("strong",{parentName:"p"},"Every versioned docs does not depends on other version"),". It is possible to have ",(0,r.kt)("inlineCode",{parentName:"p"},"foo.md")," in ",(0,r.kt)("inlineCode",{parentName:"p"},"version-1.0.0")," but it doesn't exist in ",(0,r.kt)("inlineCode",{parentName:"p"},"version-1.2.0"),". This is not possible in previous version due to Docusaurus v1 fallback functionality (",(0,r.kt)("a",{parentName:"p",href:"https://v1.docusaurus.io/docs/en/versioning#fallback-functionality"},"https://v1.docusaurus.io/docs/en/versioning#fallback-functionality"),")."),(0,r.kt)("p",null,"For example, if your ",(0,r.kt)("inlineCode",{parentName:"p"},"versions.json")," looks like this in v1"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="versions.json"',title:'"versions.json"'},'["1.1.0", "1.0.0"]\n')),(0,r.kt)("p",null,"Docusaurus v1 creates versioned docs ",(0,r.kt)("strong",{parentName:"p"},"if and only if the doc content is different"),". Your docs structure might look like this if the only doc changed from v1.0.0 to v1.1.0 is ",(0,r.kt)("inlineCode",{parentName:"p"},"hello.md"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"website\n\u251c\u2500\u2500 versioned_docs\n\u2502   \u251c\u2500\u2500 version-1.1.0\n\u2502   \u2502   \u2514\u2500\u2500 hello.md\n\u2502   \u2514\u2500\u2500 version-1.0.0\n\u2502       \u251c\u2500\u2500 foo\n\u2502       \u2502   \u2514\u2500\u2500 bar.md\n\u2502       \u2514\u2500\u2500 hello.md\n\u251c\u2500\u2500 versioned_sidebars\n\u2502   \u2514\u2500\u2500 version-1.0.0-sidebars.json\n")),(0,r.kt)("p",null,"In v2, you have to populate the missing ",(0,r.kt)("inlineCode",{parentName:"p"},"versioned_docs")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"versioned_sidebars")," (with the right front matter and ID reference too)."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:"{3-5,12}","{3-5,12}":!0},"website\n\u251c\u2500\u2500 versioned_docs\n\u2502   \u251c\u2500\u2500 version-1.1.0\n\u2502   \u2502   \u251c\u2500\u2500 foo\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 bar.md\n\u2502   \u2502   \u2514\u2500\u2500 hello.md\n\u2502   \u2514\u2500\u2500 version-1.0.0\n\u2502       \u251c\u2500\u2500 foo\n\u2502       \u2502   \u2514\u2500\u2500 bar.md\n\u2502       \u2514\u2500\u2500 hello.md\n\u251c\u2500\u2500 versioned_sidebars\n\u2502   \u251c\u2500\u2500 version-1.1.0-sidebars.json\n\u2502   \u2514\u2500\u2500 version-1.0.0-sidebars.json\n")),(0,r.kt)("h2",{id:"convert-style-attributes-to-style-objects-in-mdx"},"Convert style attributes to style objects in MDX"),(0,r.kt)("p",null,"Docusaurus 2 uses JSX for doc files. If you have any style attributes in your Docusaurus 1 docs, convert them to style objects, like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-diff"},"---\nid: demo\ntitle: Demo\n---\n\n## Section\n\nhello world\n\n- pre style=\"background: black\">zzz</pre>\n+ pre style={{background: 'black'}}>zzz</pre>\n")))}p.isMDXComponent=!0}}]);