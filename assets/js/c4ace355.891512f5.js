"use strict";(self.webpackChunkdocusaurus_docs=self.webpackChunkdocusaurus_docs||[]).push([[9138],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>f});var o=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,o,a=function(e,n){if(null==e)return{};var t,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=o.createContext({}),u=function(e){var n=o.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=u(e.components);return o.createElement(l.Provider,{value:n},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},m=o.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=u(t),m=a,f=p["".concat(l,".").concat(m)]||p[m]||d[m]||r;return t?o.createElement(f,i(i({ref:n},c),{},{components:t})):o.createElement(f,i({ref:n},c))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,i=new Array(r);i[0]=m;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[p]="string"==typeof e?e:a,i[1]=s;for(var u=2;u<r;u++)i[u]=t[u];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}m.displayName="MDXCreateElement"},16223:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>s,toc:()=>u});var o=t(87462),a=(t(67294),t(3905));const r={},i="\u63d2\u4ef6\u65b9\u6cd5\u53c2\u8003",s={unversionedId:"api/plugin-methods/README",id:"api/plugin-methods/README",title:"\u63d2\u4ef6\u65b9\u6cd5\u53c2\u8003",description:"\u8fd9\u90e8\u5206\u5de5\u4f5c\u8fd8\u5728\u8fdb\u884c\u4e2d\u3002\u951a\u94fe\u63a5\u751a\u81f3 url \u90fd\u4e0d\u80fd\u4fdd\u8bc1\u662f\u7a33\u5b9a\u7684\u3002",source:"@site/docs/api/plugin-methods/README.mdx",sourceDirName:"api/plugin-methods",slug:"/api/plugin-methods/",permalink:"/docs/api/plugin-methods/",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/api/plugin-methods/README.mdx",tags:[],version:"current",frontMatter:{},sidebar:"api",previous:{title:"docusaurus.config.js",permalink:"/docs/api/docusaurus-config"},next:{title:"\u751f\u547d\u5468\u671f APIs",permalink:"/docs/api/plugin-methods/lifecycle-apis"}},l={},u=[{value:"\u63d2\u4ef6\u6a21\u5757",id:"plugin-module",level:2},{value:"\u63d2\u4ef6\u7684\u6784\u9020\u51fd\u6570",id:"plugin-constructor",level:2},{value:"<code>context</code>",id:"context",level:3},{value:"<code>options</code>",id:"options",level:3},{value:"\u4f8b\u5b50",id:"example",level:2}],c={toc:u},p="wrapper";function d(e){let{components:n,...t}=e;return(0,a.kt)(p,(0,o.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"\u63d2\u4ef6\u65b9\u6cd5\u53c2\u8003"},"\u63d2\u4ef6\u65b9\u6cd5\u53c2\u8003"),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"\u8fd9\u90e8\u5206\u5de5\u4f5c\u8fd8\u5728\u8fdb\u884c\u4e2d\u3002\u951a\u94fe\u63a5\u751a\u81f3 url \u90fd\u4e0d\u80fd\u4fdd\u8bc1\u662f\u7a33\u5b9a\u7684\u3002")),(0,a.kt)("p",null,"\u63d2\u4ef6 APIs \u7531\u4e3b\u9898\u548c\u63d2\u4ef6\u5171\u4eab-\u4e3b\u9898\u5c31\u50cf\u63d2\u4ef6\u4e00\u6837\u52a0\u8f7d\u3002"),(0,a.kt)("h2",{id:"plugin-module"},"\u63d2\u4ef6\u6a21\u5757"),(0,a.kt)("p",null,"\u6bcf\u4e2a\u63d2\u4ef6\u90fd\u662f\u4f5c\u4e3a\u6a21\u5757\u5bfc\u5165\u7684\u3002\u8be5\u6a21\u5757\u9884\u8ba1\u6709\u4ee5\u4e0b\u6210\u5458:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"\u9ed8\u8ba4\u5bfc\u51fa"),": \u63d2\u4ef6\u7684\u6784\u9020\u51fd\u6570\u3002"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Named exports"),": \u5728\u63d2\u4ef6\u521d\u59cb\u5316\u4e4b\u524d\u8c03\u7528\u7684",(0,a.kt)("a",{parentName:"li",href:"/docs/api/plugin-methods/static-methods"},"\u9759\u6001\u65b9\u6cd5"),"\u3002")),(0,a.kt)("h2",{id:"plugin-constructor"},"\u63d2\u4ef6\u7684\u6784\u9020\u51fd\u6570"),(0,a.kt)("p",null,"\u63d2\u4ef6\u6a21\u5757\u7684\u9ed8\u8ba4\u5bfc\u51fa\u662f\u4e00\u4e2a\u7b7e\u540d\u4e3a",(0,a.kt)("inlineCode",{parentName:"p"},"(context: LoadContext, options: PluginOptions) => Plugin | Promise<Plugin>"),"\u7684\u6784\u9020\u51fd\u6570\u3002"),(0,a.kt)("h3",{id:"context"},(0,a.kt)("inlineCode",{parentName:"h3"},"context")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"context"),"\u662f\u63d2\u4ef6\u65e0\u5173\u7684\uff0c\u76f8\u540c\u7684\u5bf9\u8c61\u5c06\u88ab\u4f20\u9012\u5230 Docusaurus \u7f51\u7ad9\u4f7f\u7528\u7684\u6240\u6709\u63d2\u4ef6\u4e2d\u3002",(0,a.kt)("inlineCode",{parentName:"p"},"context"),"\u5bf9\u8c61\u5305\u542b\u4ee5\u4e0b\u5b57\u6bb5:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"type LoadContext = {\n  siteDir: string;\n  generatedFilesDir: string;\n  siteConfig: DocusaurusConfig;\n  outDir: string;\n  baseUrl: string;\n};\n")),(0,a.kt)("h3",{id:"options"},(0,a.kt)("inlineCode",{parentName:"h3"},"options")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"options"),"\u662f","[\u4f7f\u7528\u63d2\u4ef6\u65f6\u7684\u7b2c\u4e8c\u4e2a\u53ef\u9009\u53c2\u6570]","(/docs/using-plugins# configuration -plugins)\u3002",(0,a.kt)("inlineCode",{parentName:"p"},"options"),"\u662f\u7279\u5b9a\u4e8e\u63d2\u4ef6\u7684\uff0c\u7531\u7528\u6237\u5728",(0,a.kt)("inlineCode",{parentName:"p"},"docusaurus.config.js"),"\u4e2d\u4f7f\u7528\u5b83\u4eec\u65f6\u6307\u5b9a\u3002\u5982\u679c\u5bfc\u51fa\u4e86",(0,a.kt)("a",{parentName:"p",href:"/docs/api/plugin-methods/static-methods#validateOptions"},(0,a.kt)("inlineCode",{parentName:"a"},"validateOptions")),"\u51fd\u6570\uff0c",(0,a.kt)("inlineCode",{parentName:"p"},"options"),"\u5c06\u88ab\u9884\u5148\u9a8c\u8bc1\u548c\u89c4\u8303\u5316\u3002"),(0,a.kt)("p",null,"\u6216\u8005\uff0c\u5982\u679c\u9884\u8bbe\u5305\u542b\u63d2\u4ef6\uff0c\u90a3\u4e48\u9884\u8bbe\u5c06\u8d1f\u8d23\u5c06\u6b63\u786e\u7684\u9009\u9879\u4f20\u9012\u7ed9\u63d2\u4ef6\u3002\u8fd9\u662f\u7531\u5404\u4e2a\u63d2\u4ef6\u6765\u5b9a\u4e49\u5b83\u91c7\u7528\u4ec0\u4e48\u9009\u9879\u3002"),(0,a.kt)("h2",{id:"example"},"\u4f8b\u5b50"),(0,a.kt)("p",null,"\u8fd9\u662f\u4e00\u4e2a\u5047\u5b9a\u63d2\u4ef6\u5b9e\u73b0\u7684\u5fc3\u7406\u6a21\u578b\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'// A JavaScript function that returns an object.\n// `context` is provided by Docusaurus. Example: siteConfig can be accessed from context.\n// `opts` is the user-defined options.\nasync function myPlugin(context, opts) {\n  return {\n    // A compulsory field used as the namespace for directories to cache\n    // the intermediate data for each plugin.\n    // If you\'re writing your own local plugin, you will want it to\n    // be unique in order not to potentially conflict with imported plugins.\n    // A good way will be to add your own project name within.\n    name: "docusaurus-my-project-cool-plugin",\n\n    async loadContent() {\n      // The loadContent hook is executed after siteConfig and env has been loaded.\n      // You can return a JavaScript object that will be passed to contentLoaded hook.\n    },\n\n    async contentLoaded({ content, actions }) {\n      // The contentLoaded hook is done after loadContent hook is done.\n      // `actions` are set of functional API provided by Docusaurus (e.g. addRoute)\n    },\n\n    async postBuild(props) {\n      // After docusaurus <build> finish.\n    },\n\n    // TODO\n    async postStart(props) {\n      // docusaurus <start> finish\n    },\n\n    // TODO\n    afterDevServer(app, server) {\n      // https://webpack.js.org/configuration/dev-server/#devserverbefore\n    },\n\n    // TODO\n    beforeDevServer(app, server) {\n      // https://webpack.js.org/configuration/dev-server/#devserverafter\n    },\n\n    configureWebpack(config, isServer, utils, content) {\n      // Modify internal webpack config. If returned value is an Object, it\n      // will be merged into the final config using webpack-merge;\n      // If the returned value is a function, it will receive the config as the 1st argument and an isServer flag as the 2nd argument.\n    },\n\n    getPathsToWatch() {\n      // Paths to watch.\n    },\n\n    getThemePath() {\n      // Returns the path to the directory where the theme components can\n      // be found.\n    },\n\n    getClientModules() {\n      // Return an array of paths to the modules that are to be imported\n      // in the client bundle. These modules are imported globally before\n      // React even renders the initial UI.\n    },\n\n    extendCli(cli) {\n      // Register an extra command to enhance the CLI of Docusaurus\n    },\n\n    injectHtmlTags({ content }) {\n      // Inject head and/or body HTML tags.\n    },\n\n    async getTranslationFiles({ content }) {\n      // Return translation files\n    },\n\n    translateContent({ content, translationFiles }) {\n      // translate the plugin content here\n    },\n\n    translateThemeConfig({ themeConfig, translationFiles }) {\n      // translate the site themeConfig here\n    },\n\n    async getDefaultCodeTranslationMessages() {\n      // return default theme translations here\n    },\n  };\n}\n\nmyPlugin.validateOptions = ({ options, validate }) => {\n  const validatedOptions = validate(myValidationSchema, options);\n  return validatedOptions;\n};\n\nmyPlugin.validateThemeConfig = ({ themeConfig, validate }) => {\n  const validatedThemeConfig = validate(myValidationSchema, options);\n  return validatedThemeConfig;\n};\n\nmodule.exports = myPlugin;\n')))}d.isMDXComponent=!0}}]);