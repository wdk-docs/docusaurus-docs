// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`footnoteIDFixer remark plugin appends a hash to each footnote def/ref 1`] = `
"/*@jsxRuntime automatic @jsxImportSource react*/
import {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from "react/jsx-runtime";
function _createMdxContent(props) {
  const _components = Object.assign({
    p: "p",
    sup: "sup",
    a: "a",
    section: "section",
    h2: "h2",
    ol: "ol",
    li: "li"
  }, props.components);
  return _jsxs(_Fragment, {
    children: [_jsxs(_components.p, {
      children: ["foo", _jsx(_components.sup, {
        children: _jsx(_components.a, {
          href: "#user-content-fn-1-[HASH]",
          id: "user-content-fnref-1-[HASH]",
          "data-footnote-ref": true,
          "aria-describedby": "footnote-label",
          children: "1"
        })
      })]
    }), "/n", _jsxs(_components.p, {
      children: ["bar", _jsx(_components.sup, {
        children: _jsx(_components.a, {
          href: "#user-content-fn-2-[HASH]",
          id: "user-content-fnref-2-[HASH]",
          "data-footnote-ref": true,
          "aria-describedby": "footnote-label",
          children: "2"
        })
      })]
    }), "/n", _jsxs(_components.p, {
      children: ["baz", _jsx(_components.sup, {
        children: _jsx(_components.a, {
          href: "#user-content-fn-3-[HASH]",
          id: "user-content-fnref-3-[HASH]",
          "data-footnote-ref": true,
          "aria-describedby": "footnote-label",
          children: "3"
        })
      })]
    }), "/n", _jsxs(_components.section, {
      "data-footnotes": true,
      className: "footnotes",
      children: [_jsx(_components.h2, {
        className: "sr-only",
        id: "footnote-label",
        children: "Footnotes"
      }), "/n", _jsxs(_components.ol, {
        children: ["/n", _jsxs(_components.li, {
          id: "user-content-fn-1-[HASH]",
          children: ["/n", _jsxs(_components.p, {
            children: ["foo ", _jsx(_components.a, {
              href: "#user-content-fnref-1-[HASH]",
              "data-footnote-backref": true,
              className: "data-footnote-backref",
              "aria-label": "Back to content",
              children: "↩"
            })]
          }), "/n"]
        }), "/n", _jsxs(_components.li, {
          id: "user-content-fn-2-[HASH]",
          children: ["/n", _jsxs(_components.p, {
            children: ["foo ", _jsx(_components.a, {
              href: "#user-content-fnref-2-[HASH]",
              "data-footnote-backref": true,
              className: "data-footnote-backref",
              "aria-label": "Back to content",
              children: "↩"
            })]
          }), "/n"]
        }), "/n", _jsxs(_components.li, {
          id: "user-content-fn-3-[HASH]",
          children: ["/n", _jsxs(_components.p, {
            children: ["foo ", _jsx(_components.a, {
              href: "#user-content-fnref-3-[HASH]",
              "data-footnote-backref": true,
              className: "data-footnote-backref",
              "aria-label": "Back to content",
              children: "↩"
            })]
          }), "/n"]
        }), "/n"]
      }), "/n"]
    })]
  });
}
function MDXContent(props = {}) {
  const {wrapper: MDXLayout} = props.components || ({});
  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {
    children: _jsx(_createMdxContent, props)
  })) : _createMdxContent(props);
}
export default MDXContent;
"
`;
